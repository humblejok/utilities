/**
 * Generated by Gas3 v2.2.1 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (MSCIIndexTrackSaxHandler.as).
 */

package com.eim.util.msci {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import mx.collections.ListCollectionView;
    import org.granite.collections.IMap;
    import org.w3c.dom.Node;

    [Bindable]
    public class MSCIIndexTrackSaxHandlerBase implements IExternalizable {

        private var _currentIndexDocument:XML;
        private var _currentIndexId:String;
        private var _currentIndexNode:Node;
        protected var _extractionDate:Date;
        protected var _indexIds:ListCollectionView;
        protected var _indexes:IMap;
        protected var _listeners:ListCollectionView;
        protected var _loadAllIndexes:Boolean;
        private var _nodePathStack:ListCollectionView;
        private var _skipCurrentIndex:Boolean;

        [Bindable(event="unused")]
        public function get extractionDate():Date {
            return _extractionDate;
        }

        [Bindable(event="unused")]
        public function get indexes():IMap {
            return _indexes;
        }

        public function readExternal(input:IDataInput):void {
            _currentIndexDocument = input.readObject() as XML;
            _currentIndexId = input.readObject() as String;
            _currentIndexNode = input.readObject() as Node;
            _extractionDate = input.readObject() as Date;
            _indexIds = input.readObject() as ListCollectionView;
            _indexes = input.readObject() as IMap;
            _listeners = input.readObject() as ListCollectionView;
            _loadAllIndexes = input.readObject() as Boolean;
            _nodePathStack = input.readObject() as ListCollectionView;
            _skipCurrentIndex = input.readObject() as Boolean;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_currentIndexDocument);
            output.writeObject(_currentIndexId);
            output.writeObject(_currentIndexNode);
            output.writeObject(_extractionDate);
            output.writeObject(_indexIds);
            output.writeObject(_indexes);
            output.writeObject(_listeners);
            output.writeObject(_loadAllIndexes);
            output.writeObject(_nodePathStack);
            output.writeObject(_skipCurrentIndex);
        }
    }
}