/**
 * Generated by Gas3 v2.2.1 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (ChartScaleCalculator.as).
 */

package com.eim.util.report {

    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;

    [Bindable]
    public class ChartScaleCalculatorBase implements IExternalizable {

        private var _bPiMultiply:Boolean;
        private var _bPiNegativeMinimum:Boolean;
        private var _dblPiMax:Number;
        private var _dblPiMin:Number;
        protected var _increment:int;
        protected var _maxAxis:Number;
        protected var _minAxis:Number;
        private var _nPiCoefMultiply:int;
        private var _nPiCoefTranslation:int;

        [Bindable(event="unused")]
        public function get increment():int {
            return _increment;
        }

        [Bindable(event="unused")]
        public function get maxAxis():Number {
            return _maxAxis;
        }

        [Bindable(event="unused")]
        public function get minAxis():Number {
            return _minAxis;
        }

        public function readExternal(input:IDataInput):void {
            _bPiMultiply = input.readObject() as Boolean;
            _bPiNegativeMinimum = input.readObject() as Boolean;
            _dblPiMax = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _dblPiMin = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _increment = input.readObject() as int;
            _maxAxis = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _minAxis = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            _nPiCoefMultiply = input.readObject() as int;
            _nPiCoefTranslation = input.readObject() as int;
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(_bPiMultiply);
            output.writeObject(_bPiNegativeMinimum);
            output.writeObject(_dblPiMax);
            output.writeObject(_dblPiMin);
            output.writeObject(_increment);
            output.writeObject(_maxAxis);
            output.writeObject(_minAxis);
            output.writeObject(_nPiCoefMultiply);
            output.writeObject(_nPiCoefTranslation);
        }
    }
}